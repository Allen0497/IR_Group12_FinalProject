<!-- Root tag xmlns:xacro -->
<robot name="my_base" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- Encapsulate variables and constants -->
    <!-- The setting accuracy of PI value should be higher; otherwise, the wheel tilt that cannot be detected by the naked eye may occur in the subsequent calculation of wheel turnover, resulting in model jitter-->
    <xacro:property name="PI" value="3.1415926" />
    <!-- Macro: Set Black  -->
    <material name="black">
        <color rgba="0.0 0.0 0.0 1.0" />
    </material>
    <!-- Chassis properties -->
    <xacro:property name="base_footprint_radius" value="0.001" /> <!-- base_footprint radius  -->
    <xacro:property name="base_link_radius" value="0.1" /> <!-- base_link radius -->
    <xacro:property name="base_link_length" value="0.08" /> <!-- base_link length -->
    <xacro:property name="earth_space" value="0.015" /> <!-- Distance from the earth -->
    <xacro:property name="base_link_m" value="0.5" /> <!-- mass  -->
 
    <!-- Chassis -->
    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius="${base_footprint_radius}" />
            </geometry>
        </visual>
    </link>
 
    <link name="base_link">
        <visual>
            <geometry>
                <cylinder radius="${base_link_radius}" length="${base_link_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="yellow">
                <color rgba="0.5 0.3 0.0 0.5" />
            </material>
        </visual>
        <!-- Different with rviz（1）：Collisions must be set in gazebo's urdf and xacro file -->
        <collision>
            <geometry>
                <cylinder radius="${base_link_radius}" length="${base_link_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
        <!-- Different with rviz（2）：Use the inertialtag encapsulated in head.xacro -->
        <xacro:cylinder_inertial_matrix m="${base_link_m}" r="${base_link_radius}" h="${base_link_length}" />
    </link>
 
 
    <joint name="base_link2base_footprint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 ${earth_space + base_link_length / 2 }" />
    </joint>
 
    <gazebo reference="base_link">
        <!-- Different with rviz 3）：Reset the color-->
        <material>Gazebo/Yellow</material>
    </gazebo>
 
    <!-- Drive wheel -->
    <!-- Drive wheel's properties -->
    <xacro:property name="wheel_radius" value="0.0325" /> <!-- radius -->
    <xacro:property name="wheel_length" value="0.015" /> <!-- length -->
    <xacro:property name="wheel_m" value="0.05" /> <!-- mass  -->
 
    
    <xacro:macro name="add_wheels" params="name flag">
        <link name="${name}_wheel">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
                <origin xyz="0.0 0.0 0.0" rpy="${PI / 2} 0.0 0.0" />
                <material name="black" />
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
                <origin xyz="0.0 0.0 0.0" rpy="${PI / 2} 0.0 0.0" />
            </collision>
            <xacro:cylinder_inertial_matrix m="${wheel_m}" r="${wheel_radius}" h="${wheel_length}" />
        </link>
 
        <joint name="${name}_wheel2base_link" type="continuous">
            <parent link="base_link" />
            <child link="${name}_wheel" />
            <origin xyz="0 ${flag * base_link_radius} ${-(earth_space + base_link_length / 2 - wheel_radius) }" />
            <axis xyz="0 1 0" />
        </joint>
 
        <gazebo reference="${name}_wheel">
            <material>Gazebo/Red</material>
        </gazebo>
    </xacro:macro>
    
    <xacro:add_wheels name="left" flag="1" />
    <xacro:add_wheels name="right" flag="-1" />
 
    <!-- support wheel -->
    <!-- suppore wheel's properties -->
    <xacro:property name="support_wheel_radius" value="0.0075" /> <!-- radius -->
    <xacro:property name="support_wheel_m" value="0.03" /> <!-- mass  -->
 
    
    <xacro:macro name="add_support_wheel" params="name flag">
        <link name="${name}_wheel">
            <visual>
                <geometry>
                    <sphere radius="${support_wheel_radius}" />
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <material name="black" />
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${support_wheel_radius}" />
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0" />
            </collision>
            <xacro:sphere_inertial_matrix m="${support_wheel_m}" r="${support_wheel_radius}" />
        </link>
 
        <joint name="${name}_wheel2base_link" type="continuous">
            <parent link="base_link" />
            <child link="${name}_wheel" />
            <origin xyz="${flag * (base_link_radius - support_wheel_radius)} 0 ${-(base_link_length / 2 + earth_space / 2)}" />
            <axis xyz="1 1 1" />
        </joint>
        
        <gazebo reference="${name}_wheel">
            <material>Gazebo/Red</material>
        </gazebo>
    </xacro:macro>
 
    <xacro:add_support_wheel name="front" flag="1" />
    <xacro:add_support_wheel name="back" flag="-1" />
 
 
</robot>
